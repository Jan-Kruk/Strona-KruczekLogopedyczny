@keyframes a{0%{transform:translateY(-45px);animation-timing-function:ease-in;opacity:1}24%{opacity:1}40%{transform:translateY(-24px);animation-timing-function:ease-in}65%{transform:translateY(-12px);animation-timing-function:ease-in}82%{transform:translateY(-6px);animation-timing-function:ease-in}93%{transform:translateY(-4px);animation-timing-function:ease-in}25%,55%,75%,87%{transform:translateY(0);animation-timing-function:ease-out}to{transform:translateY(0);animation-timing-function:ease-out;opacity:1}}.header__hero-img{height:100vh;background-image:url(../img/Hero-img.jpg);background-size:cover;background-position:50%;background-position-y:bottom;position:relative}.header__hero-text{display:flex;justify-content:center;align-items:center;flex-direction:column;width:100%;height:80%;color:#0f0d0d;font-family:Square Peg,cursive}.header__hero-text h1{font-size:4rem;font-weight:200;text-align:center}.header__hero-text h1 span{display:block}.header__hero-text .text-image{position:relative;bottom:10px;height:50px}.header__button{display:flex;flex-direction:column;justify-content:flex-end;align-items:center;height:20%;width:100%;text-decoration:none}.header__button-icon{filter:invert(100%) sepia(0) saturate(7500%) hue-rotate(236deg) brightness(112%) contrast(98%);height:2rem;width:3rem}.header__button-text{font-size:1.6rem;font-weight:700;color:#fff;margin-bottom:0}@media (min-width:576px){.header__hero-text h1{font-size:7rem}.header__hero-text .text-image{height:100px;bottom:30px}.header__button-icon{height:4rem;width:5rem}.header__button-text{font-size:2.5rem}}@media (min-width:992px){.header__hero-text{padding-left:40%}.header__hero-text h1{font-size:10rem}.header__hero-text .text-image{height:140px;bottom:40px}.header__button{animation:a 1.2s 1s infinite both}.header__button-text{font-size:2.5rem}}.offer .row{padding-top:5rem}.offer__box{display:flex;justify-content:center;align-items:center;flex-direction:column;background-color:#fdfbfb;border:.4rem solid;border-radius:8rem}.offer__box--first-color,.offer__box--second-color,.offer__box--third-color{border-color:#c6ca45}.offer__box-title{width:50%;font-size:2rem;padding-top:2rem;font-weight:700}.offer__box-text{width:90%;font-size:1.6rem;padding-top:2rem;margin:0;text-align:justify}.offer__box-description{width:90%;padding-top:2rem;padding-bottom:4rem}.offer__box-description-appoint{text-transform:uppercase;background-color:#c6ca45;border:0;box-shadow:0 0 5px;font-size:1.6rem;font-weight:700;padding:.25rem 1rem}.offer__box-description-appoint--first-color,.offer__box-description-appoint--second-color,.offer__box-description-appoint--third-color{background-color:#c6ca45}.offer__box-description-time{height:3rem;width:3rem}.offer__box-description-time-text{display:flex;align-items:center;padding-left:.5rem;font-size:1.6rem;font-weight:700;margin-bottom:0}.offer__imgBox{display:none}@media (min-width:992px){.offer__box-text{width:80%}.offer__box-title{width:80%;font-size:2.3rem;padding-top:2rem;font-weight:700}.offer__box-description{padding:2rem;width:80%}.offer__box-description-appoint{transition:box-shadow .5s}.offer__box-description-appoint:hover{box-shadow:0 0 20px}.offer__imgBox{border-radius:12rem;display:block}}.nav-link{color:#fff;font-size:1.6rem}.nav-link:hover{color:#c6ca45}.navbar-brand{font-family:Square Peg,cursive;color:#fff;font-size:2.5rem}.navbar-brand img{height:30px;position:relative;bottom:5px}.navbar-brand:hover{filter:invert(75%) sepia(17%) saturate(1222%) hue-rotate(23deg) brightness(95%) contrast(103%)}.navbar-nav .nav-link.active{color:#c6ca45}.shadow-bg{background-color:rgba(0,0,0,.5)}nav{transition:background-color .6s;z-index:1}nav a{color:#fff}nav a:hover{color:red}nav .fa-bars{padding:10px}nav .active{color:#c6ca45}nav .nav-item{padding-right:15px}@media (min-width:992px){.nav-link{font-size:2rem;font-weight:500}.navbar-brand{font-family:Square Peg,cursive;color:#fff;font-size:4rem}.navbar-brand img{height:55px;bottom:10px}}.logo-img{height:50px}.amBox{height:15rem;background-color:#c6ca45;position:relative}.amBox-title{text-transform:uppercase;font-size:2.5rem;letter-spacing:.2rem;font-weight:700;color:#fff}#id{overflow:hidden}.aboutme-text{text-align:justify}.aboutme-text h3{font-size:2.3rem;text-transform:uppercase;font-weight:700;letter-spacing:.4rem}.aboutme-image{border-radius:5rem}.timeline ul{display:flex;flex-direction:column;list-style:none;padding-left:0}.timeline li{position:relative;margin-bottom:2em;padding:2em;width:90%;border:2px solid #c6ca45;border-radius:8px}.timeline-headline{font-size:2.3rem;text-transform:uppercase;font-weight:700;letter-spacing:.4rem}.timeline-icon{height:3.5rem}.timeline-icon:hover{filter:invert(87%) sepia(12%) saturate(2026%) hue-rotate(11deg) brightness(90%) contrast(92%)}.timeline-cetrificate{position:absolute;height:15rem;z-index:3;box-shadow:0 22px 70px 4px rgba(0,0,0,.56)}.fade-in-bottom{animation:b 1s ease-out both}.timeline-cetrificate-nonvisible{display:none}.timeline-cetrificate{height:25rem}.timeline p{width:85%}@media (min-width:768px){.timeline-icon{display:inline-block}.timeline-cetrificate{left:50%;bottom:150%}.timelineBox{display:flex;justify-content:center;align-items:center}.timeline{position:relative;width:90%;max-width:800px}.timeline li{width:50%}.timeline li:after{position:absolute;top:calc(50% - 10px);width:20px;height:20px;background-color:#c6ca45;border-radius:50%;content:""}.timeline li:nth-child(2n){align-self:flex-end;transform:translateX(20px)}.timeline li:nth-child(2n):after{left:-31px}.timeline li:nth-child(odd){transform:translateX(-20px)}.timeline li:nth-child(odd):after{right:-31px}.timeline:before{position:absolute;top:0;transform:translateX(-50%);display:block;left:50%;width:2px;height:100%;background-color:#c6ca45;content:""}}@media (max-width:767px){.timeline ul{align-items:center}.timeline-cetrificate{height:20rem;right:-10%;bottom:0;top:0}}.contact{position:relative;background-color:#c6ca45}.contact h2{font-size:2.5rem;letter-spacing:.2rem;color:#fff}.contact h2,.contact h3{text-transform:uppercase;font-weight:700}.contact h3{font-size:2rem}.contact h4{font-size:1.7rem;text-transform:uppercase;font-weight:700}.contact a{text-decoration:none;color:#000;transition:transform .2s ease-in-out}.contact a:hover{transform:scale(1.1);filter:invert(98%) sepia(0) saturate(314%) hue-rotate(10deg) brightness(120%) contrast(100%)}.contact .socials__localisation-mail-icon{width:40px}.circleBox1{position:absolute;display:flex;justify-content:space-between;width:100%;z-index:2}.circleBox1--top{top:-3rem}.circleBox1--bottom{bottom:-5.5rem}.circleBox1-circle1{background-color:#fff;height:6rem;width:6rem;border-radius:6rem}.circleBox1-circle2{background-color:#fff;height:8rem;width:8rem;border-radius:8rem}.blue-color{color:#fff;font-weight:700;text-transform:uppercase}.footer{height:5vh;display:flex;justify-content:center;align-items:center;color:#fff;background-color:#555}.footer p{font-size:1.3rem}*,:after,:before,p{margin:0;padding:0;box-sizing:border-box}html{font-size:62.5%;scroll-behavior:smooth}body{font-family:Montserrat,sans-serif;font-size:1.6rem;position:relative;overflow:auto}section{padding-top:4rem;padding-bottom:4rem}.prices__box{border:.4rem solid;border-color:#c6ca45}.prices__box-heading{font-weight:700;font-size:2rem}.prices__box-text{font-weight:700;font-size:1.8rem}@keyframes b{0%{transform:translateY(50px);opacity:0}to{transform:translateY(0);opacity:1}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
